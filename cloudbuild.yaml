steps:
# This step runs the unit tests on the app
#- name: 'python:3.7-slim'
#  id: Test
#  entrypoint: /bin/sh
#  args:
#  - -c
#  - 'pip install flask && python test_app.py -v'

# This step builds the container image.
- name: 'gcr.io/cloud-builders/docker'
  id: Build
  args:
  - 'build'
  - '-t'
  - 'gcr.io/$PROJECT_ID/constellationweb:$SHORT_SHA'
  - '.'

# This step pushes the image to Container Registry
# The PROJECT_ID and SHORT_SHA variables are automatically
# replaced by Cloud Build.
- name: 'gcr.io/cloud-builders/docker'
  id: Push
  args:
  - 'push'
  - 'gcr.io/$PROJECT_ID/constellationweb:$SHORT_SHA'

# This step deploys the dev application in Kubernetes
- name: 'gcr.io/cloud-builders/gke-deploy'
  args:
  - prepare
  - --filename=dev.yaml
  - --image=gcr.io/$PROJECT_ID/constellationweb:$SHORT_SHA
  - --output=gs://constellation-dev-build/output

# This step deploys the dev application in Kubernetes
- name: 'gcr.io/cloud-builders/gke-deploy'
  args:
  - apply
  - --filename=dev.yaml
  - --location=us-east1-b
  - --cluster=cluster-1

# This step deploys the stage application in Kubernetes
- name: 'gcr.io/cloud-builders/gcloud'
  args:
  - builds
  - submit
  - --config
  - cloudbuild-stage.yaml
  - --substitutions
  - _SHORT_SHA=$SHORT_SHA
  - .


