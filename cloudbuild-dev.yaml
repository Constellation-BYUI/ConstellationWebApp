steps:
# This step runs the unit tests on the app
#- name: 'python:3.7-slim'
#  id: Test
#  entrypoint: /bin/sh
#  args:
#  - -c
#  - 'pip install flask && python test_app.py -v'

# This step builds the container image.
- name: 'gcr.io/cloud-builders/docker'
  id: Build
  args:
  - 'build'
  - '-t'
  - 'gcr.io/$PROJECT_ID/constellationweb:latest'
  - '.'

# This step pushes the image to Container Registry
# The PROJECT_ID and SHORT_SHA variables are automatically
# replaced by Cloud Build.
- name: 'gcr.io/cloud-builders/docker'
  id: Push
  args:
  - 'push'
  - 'gcr.io/$PROJECT_ID/constellationweb:latest'

# This step deploys the dev application in Kubernetes
- name: 'gcr.io/cloud-builders/gke-deploy'
  args:
  - run
  - --filename=dev.yaml
  - --image=gcr.io/$PROJECT_ID/constellationweb:latest
  - --location=us-central1-c
  - --output=/tmp/outputdev
  - --location=us-central1-c
  - --cluster=cluster-1  

# This step runs the ConstellationTests Image 
# The PROJECT_ID variable is automatically
# replaced by Cloud Build.
- name: 'gcr.io/cloud-builders/docker'
  id: run
  env:
  - 'NODE_ENV=development'
  args:
  - 'run'
  - 'gcr.io/$PROJECT_ID/constellationautotest:latest'
  - 'npm'
  - 'run'
  - 'test-dev'


# This step deploys the stage application in Kubernetes
- name: 'gcr.io/cloud-builders/gcloud'
  args:
   - builds
   - submit
   - --config
   - cloudbuild-stage.yaml
   - --substitutions
   - _SHORT_SHA=$SHORT_SHA
   - .


# This step runs the integration tests in the Development environment
#- name: 'gcr.io/cloud-builders/gcloud'
#  id: Trigger Dev Integration Tests
#  args:
#  - 'beta'
#  - 'builds'
#  - 'triggers'
#  - 'run'
#  - '2b1c6bb1-5cef-467e-b889-4a0f618e4299'
#  - '--branch=master'
