@model ConstellationWebApp.Models.User
@using System.Security.Claims;


@{
    ViewData["Title"] = "Details";
    var photoPath = "";
    if (Model.PhotoPath != null)
    {
        photoPath = "~/image/" + Model.PhotoPath;
    }
    else
    {
        photoPath = "~/WebAssests/siteImages/avataricon.png";
    }
    var resumePath = "../../../../Resumes/" + Model.ResumePhotoPath;
    var currentUser = this.User.FindFirstValue(ClaimTypes.NameIdentifier);
    var allReadyStarred = false;
    List<ConstellationWebApp.Models.RecruiterPicks> picks = ViewBag.recruitersData;
    List<ConstellationWebApp.Models.Posting> postings = ViewBag.currentUserPostings;

    List<ConstellationWebApp.Models.Skill> skills = ViewBag.allNeededSKills;
    List<ConstellationWebApp.Models.Discipline> disciplines = ViewBag.allNeededDisciplines;
    List<ConstellationWebApp.Models.SkillDiscipline> skillDisciplines = ViewBag.allNeededSKillDisciplines;

    List<ConstellationWebApp.Models.UserSkill> userSkills = ViewBag.thisSkills;
    List<ConstellationWebApp.Models.UserSkillLink> userSkillLinks = ViewBag.thisUserSkillLinks;
    List<ConstellationWebApp.Models.SkillLink> skillLinks = ViewBag.thisSkillLinks;
}

<link rel="stylesheet" href="~/css/user-details.css" />
<section class="optional-buttons">
    @* Add a user to the my starred users list *@
    @if (currentUser != null && currentUser != Model.Id)
    {
        List<ConstellationWebApp.Models.StarredUser> starredData = ViewBag.StarredUsers;
        foreach (var starred in starredData)
        {
            if (starred.StarredOwnerID == currentUser && starred.UserStarredID == @Model.Id)
            {
                <form asp-action="Delete" asp-controller="StarredUsers">
                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                    <input type="hidden" asp-for="Id" class="form-control" value="@Model.Id" />

                    <input class="btn btn-sm btn-outline-danger mb-1 mx-auto" type="submit" value="Remove from MyStarred Users" />

                </form>
                allReadyStarred = true;
            }
        }
        @* Remove a user to the my starred users list *@
        if (allReadyStarred == false)
        {
            <form asp-action="Create" asp-controller="StarredUsers">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                <input type="hidden" asp-for="Id" class="form-control" value="@Model.Id" />


                <input class="btn btn-sm btn-primary mb-1 mx-auto" type="submit" value="Add to MyStarred Users" />

            </form>
        }

        @*Recuiter can add user to many "Picks" that the user is not already part of *@
        if ((!(postings.Count() == 0)) && @Model.Id != currentUser)
        {
            <!-- #region Info button:-->
            <button id="btn1"><i class="fa fa-info-circle" style="font-size:24px"></i></button>
            <p id="hidden-info-blip">
                These options are available because you are a job posting owner. You can easily add or remove this user and
                other users from these roles by using these actions below.
            </p>
            <!-- #endregion -->

            @*<h4>Add this User to your picks</h4>*@
            <form class="user-check-box" asp-action="CreateManyPicks" asp-controller="IntrestedCandidates">
                @{
                    int cnt = 0;
                    List<int> shown = new List<int>();
                    foreach (var posting in postings.Where(i => !(shown.Contains(i.PostingID))))
                    {
                        var assigned = false;
                        foreach (var pick in picks.Where(i => i.CandidateID == Model.Id && i.RecuiterID == currentUser && i.PostingID == posting.PostingID))
                        {
                            assigned = true;
                        }
                        if (assigned == false)
                        {
                            if (cnt++ % 3 == 0)
                            {
                                @:<div>
                                }

                                @:<div class="check">
                                    <input type="checkbox" name="postings" value="@posting.PostingID" @(Html.Raw((assigned) ? "checked=\"checked\"" : "")) /> @:  @posting.PostingTitle
                                @:</div>
                                shown.Add(posting.PostingID);
                            }
                        }
                    @:</div>
                }
                <div class="form-group mb-0">
                    <input type="hidden" class="form-control" value="@currentUser" name="recruiterID" />
                </div>
                <div class="form-group mb-0">
                    <input type="hidden" class="form-control" value="@Model.Id" name="candidateID" />
                </div>

                <div class="form-group">
                    <input type="submit" value="Add to Picks" class="btn btn-sm btn-primary picks" />
                </div>
            </form>

            @*Remove a user from many picks that the user is already part of*@
            @*<h4>Remove this User from your picks</h4>*@
            <form class="user-check-box" asp-action="DeleteManyPick" asp-controller="IntrestedCandidates">
                @{
                    int count = 0;
                    List<int> showndeleted = new List<int>();
                    foreach (var posting in postings.Where(i => !(showndeleted.Contains(i.PostingID))))
                    {
                        var assigned = false;
                        foreach (var pick in picks.Where(i => i.CandidateID == Model.Id && i.RecuiterID == currentUser && i.PostingID == posting.PostingID))
                        {
                            if (count++ % 3 == 0)
                            {
                                @:<div>
                                }
                                @:<div class="check">
                                    <input type="checkbox" name="recuiterPicks" value="@pick.RecuiterPicksID" @(Html.Raw((assigned) ? "checked=\"checked\"" : "")) /> @:  @posting.PostingTitle
                                @:</div>
                                showndeleted.Add(posting.PostingID);
                            }
                        }
                    @:</div>
                }
                <div class="form-group">
                    <input type="submit" value="Remove from picks" class="btn btn-sm btn-outline-danger" />
                </div>
            </form>
        }
    }
</section>


<div class="user-details-container">

    <div class="user-details-content shadow">
        <div class="user-details-head"><h2>@Html.DisplayFor(model => model.FirstName)  @Html.DisplayFor(model => model.LastName)'s Profile</h2></div>
        <div class="user-details-image"><img src="@photoPath" asp-append-version="true" /></div>
        <div class="user-details-info">
            <p>
                <strong>
                    @Html.DisplayNameFor(model => model.UserName) :
                </strong>
                @Html.DisplayFor(model => model.UserName)
            </p>
            <p>
                <strong>
                    @Html.DisplayNameFor(model => model.FirstName) :
                </strong>
                @Html.DisplayFor(model => model.FirstName)
            </p>
            <p>
                <strong>
                    @Html.DisplayNameFor(model => model.LastName) :
                </strong>
                @Html.DisplayFor(model => model.LastName)
            </p>
            <h4><strong> @Html.DisplayNameFor(model => model.Bio)</strong></h4>
            <div class="user-bio">
                <p>
                    @Html.DisplayFor(model => model.Bio)
                </p>
            </div>
            <h4><strong> @Html.DisplayNameFor(model => model.AreaOfDiscipline)</strong></h4>
            <h6> @Html.DisplayFor(model => model.AreaOfDiscipline)</h6>
            <p>
                <stong> @Html.DisplayNameFor(model => model.Seeking) : </stong>
                @Html.DisplayFor(model => model.Seeking)
            </p>
            @if (Model.ResumePhotoPath != null)
            {
                <div>
                    <h4><strong> Resume</strong></h4>
                    <a href="@resumePath">  View Members Resume</a>
                </div>
            }

            <div class="Contact-Links">
                <h4>Contact Links</h4>
                @foreach (var contactLink in Model.ContactLinks)
                {
                    <div class="card-link">
                        @Html.DisplayFor(modelItem => contactLink.ContactLinkLabel) :
                        @Html.DisplayFor(modelItem => contactLink.ContactLinkUrl)
                    </div>
                }
                <div class="card-footer">
                    @if (currentUser == Model.Id)
                    {

                        <a class="btn btn-sm btn-primary" asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
                        <a class="btn btn-sm btn-secondary" asp-action="Index">Back to List</a>

                    }
                    else
                    {

                        <a class="btn btn-sm btn-secondary" asp-action="Index">Back to List</a>

                    }
                </div>
            </div>
        </div>
    </div>

    <div class="user-project-container">

        <!--#region User SKills-->
        <section class="skills-sections">
            @{
                @if (disciplines.Any() && skills.Any())
                {
                    <div class="skills-and-links">
                        @* SKILLS & DISCIPLINES: Because of Backend processing this is all that is needed for the users disciplines and skill to show*@

                        @if ((!string.IsNullOrWhiteSpace(Model.FirstName) && !string.IsNullOrWhiteSpace(Model.LastName)))
                        {
                            <div class="user-skill-and-link-head"><h2>@Html.DisplayFor(model => model.FirstName)  @Html.DisplayFor(model => model.LastName)'s Skills</h2></div>
                        }
                        else
                        {
                            <div class=".user-skill-and-link-head-h2"><h2>Users Skills</h2></div>
                        }

                    <section class="Discipline_Skills">
                        @{
                            <h4 class="m-0 bg-light text-center text-black p-1">Disciplines & Skills</h4>
                            @:<div>
                                foreach (var discipline in disciplines)
                                {
                                    @:<div>
                                        <h6 class="m-0 bg-light text-center text-black p-1">@discipline.DisciplineName</h6>
                                        foreach (var skill in skills)
                                        {
                                            var sd = skillDisciplines.Where(i => i.DisciplineID == discipline.DisciplineID && i.SkillID == skill.SkillID).FirstOrDefault();
                                            if (sd != null)
                                            {
                                                <p style="opacity:1;">@skill.SkillName</p>
                                            }
                                            else
                                            {
                                                continue;
                                            }
                                        }
                                    @:</div>
                                }
                            @:</div>
                        }

                    </section>
                        @* SKILLS LINKSS: Because of Backend processing this is all that is needed for the users disciplines and skill to show*@
                    <section class="skillLink_skills">
                        @{
                            <h4 class="m-0 bg-light text-center text-black p-1">Links Showcasing Skills</h4>
                            foreach (var uslink in userSkillLinks)
                            {
                                SkillLink link = skillLinks.Where(i => i.SkillLinkID == uslink.LinkID).First();
                                <a href="@link.SkillLinkUrl" target="_blank">@link.SkilLinkLabel</a>
                                <div><p style="opacity:1; font-size:12px">Skills Displayed</p></div>
                                @:<div>
                                    foreach (var userSkill in userSkills.Where(i => i.UserSkillID == uslink.UserSkillID))
                                    {
                                        Skill SkillLinked = skills.Where(i => i.SkillID == userSkill.SkillID).First();
                                        <p style="opacity:1;">@SkillLinked.SkillName</p>

                                    }
                                @:</div>
                                <br />
                            }
                        }
                    </section>
                    </div>
                }

            }
        </section>
        <!--#endregion User SKills-->

        <div class="user-project-head"><h2>@Html.DisplayFor(model => model.FirstName)  @Html.DisplayFor(model => model.LastName)'s Projects</h2></div>
        <div class="user-project-content">
            @*User Project Card Display*@
            @foreach (var userProject in Model.UserProjects)
            {
                var projectPhotoPath = "";
                if (userProject.Project.PhotoPath != null)
                {
                    projectPhotoPath = "~/image/" + Model.PhotoPath;
                }
                else
                {
                    projectPhotoPath = "~/WebAssests/siteImages/avataricon.png";
                }
                var projectId = (userProject.Project.ProjectID);
                var projectPath = "../../../Projects/" + projectId;



                <div class="card shadow m-1">
                    @*Note: We do not want to display the PhotoPath Path but the image itself*@
                    <div>
                        @*<a href="@projectPath"><img class="img-thumbnail mx-auto d-block" src=" @projectPhotoPath" alt="@Html.DisplayFor(modelItem => userProject.Project.Title)" asp-append-version="true" /></a>*@
                    </div>
                    <h4><strong> @Html.DisplayFor(modelItem => userProject.Project.Title)</strong></h4>
                    @*<div>
                        @Html.DisplayNameFor(modelItem => userProject.Project.Title) :

                    </div>*@

                    <h4><strong> @Html.DisplayNameFor(modelItem => userProject.Project.Description)</strong></h4>
                    <div class="user-bio">@Html.DisplayFor(modelItem => userProject.Project.Description)</div>

                    <div>
                        @Html.DisplayNameFor(modelItem => userProject.Project.StartDate) :
                        @Html.DisplayFor(modelItem => userProject.Project.StartDate)
                    </div>
                    <div>
                        @Html.DisplayNameFor(modelItem => userProject.Project.EndDate) :
                        @Html.DisplayFor(modelItem => userProject.Project.EndDate)
                    </div>
                    <div>
                        @Html.DisplayNameFor(modelItem => userProject.Project.CreationDate) :
                        @Html.DisplayFor(modelItem => userProject.Project.CreationDate)
                    </div>

                    <h4><strong>Collaborators</strong></h4>
                    <div class="d-flex">
                        @foreach (var collab in ViewBag.collaborators)
                        {
                            if ((userProject.UserID != collab.UserID) && (userProject.ProjectID == collab.ProjectID))
                            {

                                var collabPath = "";

                                if (userProject.Project.PhotoPath != null)
                                {
                                    collabPath = "~/image/" + (collab.User.PhotoPath);
                                }
                                else
                                {
                                    collabPath = "~/WebAssests/siteImages/avataricon.png";
                                }

                                var collabMemberPath = "../../Users/Details/" + (collab.UserID);

                                <a href="@collabMemberPath"><img class="collaborators-picture" src=" @collabPath" asp-append-version="true" /></a>
                            }

                        }
                    </div>

                    <h4><strong>Project Links</strong></h4>
                    @foreach (var link in userProject.Project.ProjectLinks)
                    {
                        <a class="card-link" href=" @Html.DisplayFor(modelItem => link.ProjectLinkUrl)" target="_blank">@Html.DisplayFor(modelItem => link.ProjectLinkLabel)</a>
                        <br />
                    }

                    <div class="card-footer">
                        <a class="btn btn-md btn-primary" href="@projectPath">View&nbsp;Project</a>
                    </div>
                </div>
            }
        </div>
    </div>
</div>




