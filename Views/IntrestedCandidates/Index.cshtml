@model ConstellationWebApp.Models.ViewModel

@using System.Security.Claims;

@{
    ViewData["Title"] = "Index";
    var currentUser = this.User.FindFirstValue(ClaimTypes.NameIdentifier);
    List<int> shown = new List<int>();
    List<ConstellationWebApp.Models.IntrestedCandidate> data = ViewBag.intrestData;
    var count = 0;
}

<link rel="stylesheet" href="/css/postings-candidate.css" />

<div class="container col-md-6 rounded shadow-lg">
    <h3 class="text-black-50 text-center mt-2 py-3 py-sm-2">Posted Roles</h3>
</div>

<!-- Page info -->
<section class="page-info">
    <div class="info-button" id="button-info">View&nbsp;Page&nbsp;Info</div>
    <article>
       In this view you can see the list of candidates that you have picked for a posting.
        If you no longer want a person as a “pick”, remove them with the “remove from your picks pool” button.
        You can also see those who are interested and add them on to the Picks Pool.
        The information on your posting will also be available. If you do not have anyone selected that they are interested in the role,
        and if you do not have anyone selected for a “pick”, those sections will not appear.
    </article>
</section>
<!-- #endregion -->


<div id="projectDisplay">
    @*The user must be logged in that should ensure that only the right user is seeign this data*@
    @{
        if (Model.Postings != null && currentUser != null)
        {
            @*Display all "Role/Postings"*@
            @foreach (var item in Model.Postings.Where(i => i.PostingOwner.Id == currentUser))
            {
    <div class="card shadow-lg text-black text-center m-2 padding">
        @{
            count = 0;
        }
        @*Display all the user picks with requires the pick to relate to a "Role/Posting"*@
        @foreach (var pick in Model.RecruiterPicks.Where((i => i.PostingID == item.PostingID)))
        {
            if (count == 0)
            {
                <h2> Your Picks for @pick.Posting.PostingTitle</h2>
            }
            var candidatePath = "";
            if (pick.Candidate.PhotoPath != null)
            {
                candidatePath = "~/image/" + pick.Candidate.PhotoPath;
            }
            else
            {
                candidatePath = "~/WebAssests/siteImages/avataricon.png";
            }

            var candidateMemberPath = "../Users/Details/" + (pick.Candidate.Id);
            <a href="@candidateMemberPath"><img class="small-thumbnail" src=" @candidatePath" alt="@Html.DisplayFor(modelItem => pick.Candidate.UserName)" asp-append-version="true" /></a>
            <p>@pick.Candidate.UserName</p>

            <form asp-action="DeletePick" asp-controller="IntrestedCandidates">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <div class="form-group">
                    <input type="hidden" class="form-control" value="@pick.RecuiterPicksID" name="recuiterPicksID" />
                </div>
                <div class="form-group">
                    <input type="submit" value="Remove from your Picks Pool" class="btn btn-primary" />
                </div>
            </form>
            count++;
        }

        @* Display the Posting/Role itself *@
        @{
            var spID = item.PostingID;
            var photoPath = "";
            if (item.PostingOwner.PhotoPath != null)
            {
                photoPath = "~/image/" + item.PostingOwner.PhotoPath;
            }
            else
            {
                photoPath = "~/WebAssests/siteImages/avataricon.png";
            }

            var collabMemberPath = "../Users/Details/" + (item.PostingOwner.Id);
        }

        <hr />
        @{var postUrl = "../Postings/Details/" + (item.PostingID); }
        @*CSS RULES FOR INDIVIDUAL CARDS*@
        <div class="card shadow-lg text-black text-center m-2 padding" style="cursor: pointer;" onclick="window.location='@postUrl';">
            @*Name of Company*@
            <h3 class="card-header bg-primary py-1 text-white text-center m-0">
                @Html.DisplayFor(modelItem => item.PostingFor)
            </h3>
            @*Position*@
            <h5 class="text-center m-0 bg-light p-2 border-bottom">
                <strong class="text-success">Position : </strong><span class="mb-0 p-1 text-black">@Html.DisplayFor(modelItem => item.PostingTitle)</span>
            </h5>

            <section class="bg-light text-wrap text-justify">
                <div class="col-6 text-left float-left">
                    <div class="bg-light text-wrap p-2 py-0 border-bottom"><strong class="text-black">Recruiter's Name : </strong><span class="text-black-50">@Html.DisplayFor(modelItem => item.PostingOwner.UserName)</span></div>
                    <a class="m-1 border-success" href="@collabMemberPath"><img style="height: 300px; width: 100%; display: block; box-shadow: 5px 5px 15px #343a40;" src=" @photoPath" alt="@Html.DisplayFor(modelItem => item.PostingOwner.UserName)" asp-append-version="true" /></a>
                </div>
                <div class="col-6 float-right text-center">
                    @*Type of Posting*@
                    <h5 class="card-title bg-info container-fluid float-right py-2 text-white rounded mt-2">Type of Posting</h5>
                    @foreach (var type in item.Posting_PostingTypes)
                    {
                        <h6 class="text-black">
                            @type.PostingTypes.PostingTypeName
                        </h6>

                    }
                    @*Description of Posting*@
                    <h5 class="card-title bg-info container-fluid float-right py-2 text-white rounded">Description</h5>
                    <p class="text-black-50 p-2">@Html.DisplayFor(modelItem => item.Description)</p>
                </div>
            </section>


            @*Display the Posting types of the Posting itself *@
            <div>
                <h4>Type of Posting</h4>
                @foreach (var type in item.Posting_PostingTypes)
                {
                    <div class="Demo-Types">
                        @type.PostingTypes.PostingTypeName
                    </div>
                    <br />
                }
            </div>
        </div>

        @if (Model.intrestedCandidates != null)
        {
            @*Display the intrested candidates *@
            <h4>Those Intrested</h4>
            foreach (var candidate in Model.intrestedCandidates.Where(i => i.PostingID == item.PostingID))
            {
                var candidatePath = "";
                if (candidate.User.PhotoPath != null)
                {
                    candidatePath = "~/image/" + candidate.User.PhotoPath;
                }
                else
                {
                    candidatePath = "~/WebAssests/siteImages/avataricon.png";
                }
                var candidateMemberPath = "../Users/Details/" + (candidate.UserID);

                @:<div style="cursor: pointer;" onclick="window.location='@candidateMemberPath';">
                  <a href="@candidateMemberPath"><img class="small-thumbnail" src=" @candidatePath" alt="@Html.DisplayFor(modelItem => candidate.User.UserName)" asp-append-version="true" /></a>
                    @*easily add an intrested user to the recuiters picks *@
                    <form asp-action="CreatePick" asp-controller="IntrestedCandidates">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="form-group">
                            <input type="hidden" class="form-control" value="@item.PostingID" name="postingID" />
                            <input type="hidden" class="form-control" value="@candidate.UserID" name="candidateID" />
                            <input type="hidden" class="form-control" value="@item.PostingOwner.Id" name="recruiterID" />
                        </div>
                        <div class="form-group">
                            <input type="submit" value="Add to your Picks Pool" class="btn btn-primary" />
                        </div>
                    </form>
                @:</div>
            }
            <div>
                <a asp-action="Details" asp-controller="Postings" asp-route-id="@item.PostingID">Post Details</a>
                <a asp-action="Edit" asp-controller="Postings" asp-route-id="@item.PostingID">Edit</a> |
                <a asp-action="Index" asp-controller="Postings">View All Postings</a>
            </div>

        }
    </div>
        }
        }

        else
        {
        <p>You do not have postings</p>
        }
        }
    </div>
